{"version":3,"sources":["js/11-racetrack.js"],"names":["horses","raceCounter","refs","startBtn","document","querySelector","winnerField","progressField","tableBody","onStart","promises","map","run","updateWinnerField","updateProgressField","determineWinner","waitForAll","horsesP","Promise","race","then","horse","time","updateResultsTable","all","message","textContent","tr","insertAdjacentHTML","resolve","getRandomTime","setTimeout","min","max","Math","floor","random","addEventListener"],"mappings":";;;AA4EC,aA5ED,QAAA,wBAGA,MAAMA,EAAS,CAAC,cAAe,UAAW,kBAAmB,aAAc,cAG3E,IAAIC,EAAc,EAGlB,MAAMC,EAAO,CACXC,SAAUC,SAASC,cAAc,kBACjCC,YAAaF,SAASC,cAAc,cACpCE,cAAeH,SAASC,cAAc,gBACtCG,UAAWJ,SAASC,cAAc,8BAOpC,SAASI,IACPR,GAAe,EACTS,MAAAA,EAAWV,EAAOW,IAAIC,GAE5BC,EAAkB,IAClBC,EAAoB,4CACpBC,EAAgBL,GAChBM,EAAWN,GAIb,SAASK,EAAgBE,GACvBC,QAAQC,KAAKF,GAASG,KAAK,EAAGC,MAAAA,EAAOC,KAAAA,MACnCT,gBAAgCQ,qBAAyBC,kBAEzDC,EAAmB,CAAEF,MAAAA,EAAOC,KAAAA,EAAMrB,YAAAA,MAKtC,SAASe,EAAWC,GAClBC,QAAQM,IAAIP,GAASG,KAAK,KACxBN,EAAoB,2CAKxB,SAASD,EAAkBY,GACzBvB,EAAKI,YAAYoB,YAAcD,EAIjC,SAASX,EAAoBW,GAC3BvB,EAAKK,cAAcmB,YAAcD,EAInC,SAASF,GAAmB,MAAEF,EAAF,KAASC,EAAT,YAAerB,IACnC0B,MAAAA,aAAgB1B,aAAuBoB,aAAiBC,cAC9DpB,EAAKM,UAAUoB,mBAAmB,YAAaD,GAIjD,SAASf,EAAIS,GACJ,OAAA,IAAIH,QAAQW,IACXP,MAAAA,EAAOQ,EAAc,IAAM,MAEjCC,WAAW,KACTF,EAAQ,CAAER,MAAAA,EAAOC,KAAAA,KAChBA,KAKP,SAASQ,EAAcE,EAAKC,GACnBC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GA1DtD9B,EAAKC,SAASkC,iBAAiB,QAAS5B","file":"11-racetrack.fa1499dd.js","sourceRoot":"../src","sourcesContent":["import '../sass/modul12.scss';\n\n// –ú–∞—Å—Å–∏–≤ –õ–æ—à–∞–¥–µ–π\nconst horses = ['Secretariat', 'Eclipse', 'West Australian', 'Flying Fox', 'Seabiscuit'];\n\n// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –Ω—É–º–µ—Ä–∞—Ü–∏–∏ –∑–∞–µ–∑–¥–∞ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã\nlet raceCounter = 0;\n\n// –†–µ—Ñ—ã\nconst refs = {\n  startBtn: document.querySelector('.js-start-race'),\n  winnerField: document.querySelector('.js-winner'),\n  progressField: document.querySelector('.js-progress'),\n  tableBody: document.querySelector('.js-results-table > tbody'),\n};\n\n// –°–ª—É—à–∞—Ç–µ–ª—å –Ω–∞ –∫–Ω–æ–ø–∫—É\nrefs.startBtn.addEventListener('click', onStart);\n\n// –°—Ç–∞—Ä—Ç\nfunction onStart() {\n  raceCounter += 1;\n  const promises = horses.map(run);\n\n  updateWinnerField('');\n  updateProgressField('ü§ñ –ó–∞–µ–∑–¥ –Ω–∞—á–∞–ª—Å—è, —Å—Ç–∞–≤–∫–∏ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è!');\n  determineWinner(promises);\n  waitForAll(promises);\n}\n\n// * Promise.race([]) –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –≤—ã–ø–æ–ª–Ω–∏–≤—à–µ–≥–æ—Å—è –ø—Ä–æ–º–∏—Å–∞\nfunction determineWinner(horsesP) {\n  Promise.race(horsesP).then(({ horse, time }) => {\n    updateWinnerField(`üéâ –ü–æ–±–µ–¥–∏–ª ${horse}, —Ñ–∏–Ω–∏—à–∏—Ä–æ–≤–∞–≤ –∑–∞ ${time}\n    –≤—Ä–µ–º–µ–Ω–∏`);\n    updateResultsTable({ horse, time, raceCounter });\n  });\n}\n\n// * Promise.all([]) –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ–º–∏—Å–æ–≤\nfunction waitForAll(horsesP) {\n  Promise.all(horsesP).then(() => {\n    updateProgressField('üìù –ó–∞–µ–∑–¥ –æ–∫–æ–Ω—á–µ–Ω, –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Å—Ç–∞–≤–∫–∏.');\n  });\n}\n\n// –û–±–Ω–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è\nfunction updateWinnerField(message) {\n  refs.winnerField.textContent = message;\n}\n\n// –û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞\nfunction updateProgressField(message) {\n  refs.progressField.textContent = message;\n}\n\n// –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ –∑–∞–±–µ–≥—É –≤ —Ç–∞–±–ª–∏—Ü—É\nfunction updateResultsTable({ horse, time, raceCounter }) {\n  const tr = `<tr><td>${raceCounter}</td><td>${horse}</td><td>${time}</td></tr>`;\n  refs.tableBody.insertAdjacentHTML('beforeend', tr);\n}\n\n// –ü—Ä–æ–º–∏—Å –¥–ª—è –æ–¥–Ω–æ–π –ª–æ—à–∞–¥–∏ (—Å–æ–∑–¥–∞—ë—Ç –ø—Ä–æ–º–∏—Å)\nfunction run(horse) {\n  return new Promise(resolve => {\n    const time = getRandomTime(2000, 3500);\n\n    setTimeout(() => {\n      resolve({ horse, time });\n    }, time);\n  });\n}\n\n// –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ\nfunction getRandomTime(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n"]}