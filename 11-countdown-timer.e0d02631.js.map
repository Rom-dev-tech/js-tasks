{"version":3,"sources":["js/11-countdown-timer.js"],"names":["document","body","style","backgroundImage","Refs","startBtn","getElementById","stopBtn","getDays","time","Math","floor","getHours","getMins","getSeconds","template","value","event","EVENT_DISC","newYearDate","Date","getTime","addZero","n","parseInt","Timer","selector","id","querySelector","insertAdjacentHTML","valueRef","start","setInterval","diff","now","days","hours","mins","seconds","textContent","updateValue","clearInterval","remove","innerHTML","stop","timer","addEventListener","classList","add"],"mappings":";;;AAqGA,aArGE,QAAA,wBAUFA,SAASC,KAAKC,MAAMC,gBAAkB,gDAGtC,MAAMC,EAAO,CACXC,SAAUL,SAASM,eAAe,SAClCC,QAAQP,SAASM,eAAe,SAG5BE,EAAUC,GAAQC,KAAKC,MAAMF,EAAO,IAAO,GAAK,GAAK,IACrDG,EAAWH,GAAQC,KAAKC,MAAOF,EAAQ,MAAyB,MAChEI,EAAUJ,GAASC,KAAKC,MAAOF,EAAQ,KAAoB,KAC3DK,EAAaL,GAASC,KAAKC,MAAOF,EAAQ,IAAc,KAGxDM,EAAW,CAACC,EAAOC,2CACWA,iEACcD,aAI5CE,EAAa,gBAGbC,EAAc,IAAIC,KAAK,cAAcC,UAG3C,SAASC,EAAQC,GACR,OAACC,SAASD,EAAG,IAAM,GAAK,IAAM,IAAMA,EAI7C,SAASE,GAAM,SAACC,IACRC,IAAAA,EAAK,EACT3B,SAAS4B,cAAcF,GAClBG,mBAAmB,YAAad,EAAS,cAAeG,IAEvDY,MAAAA,EAAW9B,SAAS4B,iBAAiBF,YAMtCK,KAAAA,MAAQ,MACNJ,IAGHA,EAAKK,YAAY,KACPC,MAAAA,EAAOd,EAAcC,KAAKc,MAC1BC,EAAO3B,EAAQyB,GACfG,EAAQxB,EAASqB,GACjBI,EAAOxB,EAAQoB,GACfK,EAAUxB,EAAWmB,GAbdjB,CAAAA,IACjBc,EAASS,YAAcvB,GAanBwB,IAAelB,EAAQa,WAAcb,EAAQc,YAAgBd,EAAQe,WAAcf,EAAQgB,cAGzFL,EAAO,IACTQ,cAAcd,GACdvB,EAAKC,SAASqC,SACdtC,EAAKG,QAAQmC,SACP1C,SAAS4B,cAAcF,GAAUiB,UAAY,+BAEpD,QAGFC,KAAAA,KAAO,MACRH,cAAcd,GACdA,EAAK,IAQb,MAAMkB,EAAQ,IAAIpB,EAAM,CAACC,SAAU,WAGnCtB,EAAKC,SACFyC,iBAAiB,QAAS,KACzBD,EAAMd,QACN3B,EAAKG,QAAQwC,UAAUL,OAAO,aAC9BtC,EAAKC,SAAS0C,UAAUC,IAAI,eAEhC5C,EAAKG,QACFuC,iBAAiB,QAAS,KACzBD,EAAMD,OACNxC,EAAKC,SAAS0C,UAAUL,OAAO,aAC/BtC,EAAKG,QAAQwC,UAAUC,IAAI","file":"11-countdown-timer.e0d02631.js","sourceRoot":"../src","sourcesContent":["  import '../sass/modul11.scss';\n/**\n * You have current UTC. Write func for getting\n * 1. Days\n * 2. Hours\n * 3. Mins\n * 4. Seconds\n */\n\n//* backgroundImage\ndocument.body.style.backgroundImage = \"url('https://i.ibb.co/3mThcXc/afternoon.jpg')\";\n\n// * Рефы\nconst Refs = {\n  startBtn: document.getElementById('start'),\n  stopBtn:document.getElementById('stop'),\n}\n// * Расчёт поиска (дни, часы, минуты, секунды)\nconst getDays = time => Math.floor(time / 1000 / 60 / 60 / 24);\nconst getHours = time => Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60 ));\nconst getMins = time =>  Math.floor((time % (1000 * 60 * 60)) / (1000 * 60 ));\nconst getSeconds = time =>  Math.floor((time % (1000 * 60)) / 1000); \n\n//* Разметка ==============\nconst template = (value, event) => `\n<p class=\"clockface js-clockface\">${event} starts</p>\n<span class=\"clockface js-clockface\" id=\"value\">${value}</span>\n`;\n\n// * Событие которое настанет\nconst EVENT_DISC = 'New Year 2022';\n\n// * Дата до которого времени считает таймер\nconst newYearDate = new Date('01/01/2022').getTime();\n\n//* Add Zeros\nfunction addZero(n) {\n  return (parseInt(n, 10) < 10 ? '0' : '') + n;\n}\n\n// * Конструктор\nfunction Timer({selector}) {\n    let id = 0;\n    document.querySelector(selector)\n        .insertAdjacentHTML('beforeend', template('00:00:00:00', EVENT_DISC));\n\n    const valueRef = document.querySelector(`${selector} #value`);\n\n    const updateValue = (value) => {\n        valueRef.textContent = value;\n    }\n\n    this.start = () => {\n        if(id) {\n            return;\n        }\n        id = setInterval(() => {\n            const diff = newYearDate - Date.now();\n            const days = getDays(diff);\n            const hours = getHours(diff);\n            const mins = getMins(diff);\n            const seconds = getSeconds(diff);\n            updateValue(`${addZero(days)} days ${addZero(hours)} hours ${addZero(mins)} mins ${addZero(seconds)} seconds`);\n          \n          // * Если событее прошло\n          if (diff < 0) {\n            clearInterval(id);\n            Refs.startBtn.remove();\n            Refs.stopBtn.remove();\n                  document.querySelector(selector).innerHTML =`<p class=\"end\">EXPIRED</p>`;\n  }\n        }, 100);\n    };\n\n    this.stop = () => {\n        clearInterval(id);\n        id = 0;\n  }\n}\n\n// * Создаём Экземпляр ==================\n/**\n * Create timer how many days:hours:minutes:seconds left to some date\n */\nconst timer = new Timer({selector: '#timer'});\n\n// * Вешаем события на кнопки\nRefs.startBtn\n  .addEventListener('click', () => {\n    timer.start()\n    Refs.stopBtn.classList.remove('is-active')\n    Refs.startBtn.classList.add('is-active')\n  });\nRefs.stopBtn\n  .addEventListener('click', () => {\n    timer.stop()\n    Refs.startBtn.classList.remove('is-active')\n    Refs.stopBtn.classList.add('is-active')\n  });\n\n// * Если необходимо запуск при открытии страницы (run)\n// timer.start();"]}